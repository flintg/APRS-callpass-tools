This is a little library I decided to build because I got tired of
people waiting for other people to give them their APRS code.
Sometimes wait times would reach weeks long.

This is a much more elegant solution which aims to remove emails and wait time from the process.
Less hassle for humans, less pissoff-ery for the person needing their code. :)
This does the basic job, and more. It is a library, a command line tool, and an APRS code web server.

You like the sound of that? Good, it's yours!


---------------------------------------------------------------
Usage:

        $ python callpass_tools.py <CALLSIGN>
                <callsign> must be an FCC recognized
                callsign! (no dashes or designators)

        $ python callpass_tools.py -d [port] [ip]
                This will start the callpass web interface!
                * IP and port are optional.
				  Defaults to 0.0.0.0:8050

--------------------------------------------------------------




REQUIREMENTS:
	
	The tool for generating the aprs-is callsign passcodes.
		You either know what it is or you don't.
	
	Python daemon module. `sudo pip install daemon` or `sudo easy_install daemon`
		Manual install: http://pypi.python.org/pypi/daemon
		[OPTIONAL] Required only if you require this server as a daemon


ABILITIES:
[~] As a standalone:
	Generate a code immediately with the built in ability to check against licensing authorities.

[~] As a library:
	Searches callsigns against the callook (callook.info) database to guaruntee license validity.
		(Does not check for cancellation yet)
	Simple way to check licenses.
		callpass_tools.get_code() validates the license and returns the code for you.
		Success: { 'status': True,  'method': 'callook', 'callpass': 12345 }
		Failure: { 'status': False, 'method': 'callook', 'reason': 'Could not find callsign in the database' }
	You can start the web daemon from your program.
	The server is accessible from callpass_tools.web_daemon.server

[~] As a web server:
	Offers easy HTTP GET interface options.
		HTML at /code/AB3DEF
		JSON at /json/AB3DEF
	Binds to any IP/port that's available.
	Prevents you from spawning more than one instance.
	The callpass is not generated unless the license passes validation.


TODO:
	* The default code.html and error.html files need a bit better text styling.
	* Doesn't currently identify cancelled licenses because I don't know if
		that has a consistent entry in the database
	* Get images working when served. Don't know why, they just don't.


LICENSE:
	GPLv3


AUTHOR'S NOTE:

	I'm basically a newbie to git and python, so if you'd like to help, feel free!
Just try to explain changes (in comments) instead of telling me I'm an idiot :)

I've been advised against using HTTPServer for this task, but with the 
ThreadingMixIn it can more than handle the measley amount of requests it will get.
